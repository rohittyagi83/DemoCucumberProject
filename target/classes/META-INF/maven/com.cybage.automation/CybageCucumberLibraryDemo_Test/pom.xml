<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.cybage.automation</groupId>
  <artifactId>CybageCucumberLibraryDemo_Test</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>3.14.0</version>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-remote-driver</artifactId>
			<version>3.14.0</version>
		</dependency>
	<dependency>
	    <groupId>info.cukes</groupId>
	    <artifactId>cucumber-java</artifactId>
	    <version>1.2.5</version>
	</dependency>
	<dependency>
	    <groupId>info.cukes</groupId>
	    <artifactId>cucumber-jvm</artifactId>
	    <version>1.2.5</version>
	    <type>pom</type>
	</dependency>
	<dependency>
	    <groupId>info.cukes</groupId>
	    <artifactId>cucumber-picocontainer</artifactId>
	    <version>1.2.5</version>
	    <scope>test</scope>
	</dependency>
	<dependency>
    	<groupId>info.cukes</groupId>
    	<artifactId>cucumber-testng</artifactId>
    	<version>1.2.5</version>
	</dependency>
	<dependency>
		<groupId>com.aventstack</groupId>
		<artifactId>extentreports</artifactId>
		<version>3.1.5</version>
	</dependency>
	<dependency>
		<groupId>com.vimalselvam</groupId>
		<artifactId>cucumber-extentsreport</artifactId>
		<version>3.0.2</version>
	</dependency>
	<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>4.0.0</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.poi</groupId>
		    <artifactId>poi</artifactId>
		    <version>4.0.0</version>
		</dependency>
		<dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.3.2</version>
        </dependency>
  </dependencies>
  
  <build>
	  <plugins>
		    <plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-compiler-plugin</artifactId>
		        <version>3.5.1</version>
		        <configuration>
		          <source>1.8</source>
		          <target>1.8</target>
		          <encoding>${project.build.sourceEncoding}</encoding>          
		        </configuration>
		     </plugin>
		     
		     
		<plugin>
		  <groupId>com.github.temyers</groupId>
		  <artifactId>cucumber-jvm-parallel-plugin</artifactId>
		  <version>5.0.0</version>
		  <executions>
		     <execution>
		     <id>generateRunners</id>
		     <phase>generate-test-sources</phase>
		     <goals>
		       <goal>generateRunners</goal>
		     </goals>
		     <configuration>
		         <!-- Mandatory -->
		         <!-- comma separated list of package names to scan for glue code -->
		         <glue>stepDefinitions</glue>
		         <packageName>testRunner</packageName>
		          <outputDirectory>${project.basedir}/src/test/java/</outputDirectory>
		         <!-- <outputDirectory>${project.build.directory}/generated-test-sources/cucumber</outputDirectory> -->
		          <!-- The directory, which must be in the root of the runtime classpath, containing your feature files.  -->
		           <featuresDirectory>src/test/resources/functionalTests</featuresDirectory>
		          <!-- Directory where the cucumber report files shall be written  -->
		          <cucumberOutputDir>target/cucumber-parallel/</cucumberOutputDir>
		          <!-- comma separated list of output formats json,html,rerun.txt -->
		          <format>json,html</format>
				  <plugins>
		                <plugin>
		                    <name>com.cucumber.listener.ExtentCucumberFormatter</name>
		                    <extension>html</extension>
		                    <outputDirectory>${project.build.directory}/cucumber-parallel</outputDirectory>
		                </plugin>
		            </plugins>
		          <!-- CucumberOptions.strict property -->
		          <strict>true</strict>
		          <!-- CucumberOptions.monochrome property -->
		          <monochrome>true</monochrome>
		          <!-- The tags to run, maps to CucumberOptions.tags property you can pass ANDed tags like "@tag1","@tag2" and ORed tags like "@tag1,@tag2,@tag3" -->
		           <tags>
		               <tag>@sanity</tag>
		           </tags>
		          <!-- If set to true, only feature files containing the required tags shall be generated. -->
		          <filterFeaturesByTags>false</filterFeaturesByTags>
		          <!-- Generate TestNG runners instead of default JUnit ones. --> 
		          <useTestNG>true</useTestNG>
		          <!-- The naming scheme to use for the generated test classes.  One of 'simple' or 'feature-title' --> 
		         <namingScheme>simple</namingScheme>
		         <!-- The class naming pattern to use.  Only required/used if naming scheme is 'pattern'.-->
		         <namingPattern>Parallel{c}IT</namingPattern>
		         <!-- One of [SCENARIO, FEATURE]. SCENARIO generates one runner per scenario.  FEATURE generates a runner per feature. -->
		         <parallelScheme>FEATURE</parallelScheme>
		         <!-- This is optional, required only if you want to specify a custom template for the generated sources (this is a relative path) -->
		<!--         <customVmTemplate>src/test/resources/cucumber-serenity-runner.vm</customVmTemplate> -->
		        </configuration>
		       </execution>
		     </executions>
		   </plugin>
		<plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.20</version>
                <configuration>
                    <includes>
                        <include>**/Parallel*IT.java</include>
                    </includes>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <reuseForks>false</reuseForks>
                    <testFailureIgnore>true</testFailureIgnore>
<!--                     <parallel>classes</parallel> -->
                    <!-- <threadCount>2</threadCount> -->
                    <suiteXmlFiles>
            			<suiteXmlFile>testng.xml</suiteXmlFile>
        			</suiteXmlFiles>
                    <!-- <forkCount>2</forkCount> -->
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
 
            <plugin>
				<groupId>com.trivago.rta</groupId>
				<artifactId>cluecumber-report-plugin</artifactId>
				<version>1.0.0</version>
				<executions>
					<execution>
						<id>report</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>reporting</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<sourceJsonReportDirectory>${project.build.directory}\cucumber-parallel</sourceJsonReportDirectory>
					<generatedHtmlReportDirectory>${project.build.directory}\test-report</generatedHtmlReportDirectory>
				</configuration>
			</plugin>
      	</plugins>
  	</build>
</project>
